#!/bin/sh

# Create a new directory and enter it
function mkd() {
	mkdir -p "$@" && cd "$_";
}

# Determine size of a file or total size of a directory
function fs() {
	if du -b /dev/null > /dev/null 2>&1; then
		local arg=-sbh;
	else
		local arg=-sh;
	fi
	if [[ -n "$@" ]]; then
		du $arg -- "$@";
	else
		du $arg .[^.]* ./*;
	fi;
}

# `tre` is a shorthand for `tree` with hidden files and color enabled, ignoring
# the `.git` directory, listing directories first. The output gets piped into
# `less` with options to preserve color and line numbers, unless the output is
# small enough for one screen.
function tre() {
	tree -aC -I '.git|node_modules|bower_components' --dirsfirst "$@" | less -FRNX;
}

# Creates a new git branch
function nb {
  NEW_BRANCH_NAME=$1
  git checkout -b $NEW_BRANCH_NAME
  git branch --set-upstream-to origin/$NEW_BRANCH_NAME
}

function git_clean_branches {
  git branch --merged master | grep -v "master" | grep -v "^\*" | xargs -n 1  bash -c 'git branch -D $@ && git push origin $@ 2> /dev/null' bash
}

alias gcl=git_clean_branches

function preview {
  open $PREVIEW_ENV?ui_version=$(git rev-parse HEAD)
}

# who is using the laptop's iSight camera?
camerausedby () {
  echo "Checking to see who is using the iSight cameraâ€¦ ðŸ“·"
  usedby=$(lsof | grep -w "AppleCamera\|USBVDC\|iSight" | awk '{printf $2"\n"}' | xargs ps)
  echo -e "Recent camera uses:\n$usedby"
}
